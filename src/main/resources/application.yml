#
#spring:
#  application:
#    name: wechat-jenkins

server:
  port: 10011

#  微信公众号后台配置
wechat:
  app-id: wx2c91394458d759ef
  app-secret: 819371d5096ab1ab52fa4d12dd7861e6
  token: abc
activemq:
    first:
       broker-url: tcp://139.199.81.196:61617
       user: admin
       password: admin
       close-timeout: 15   # 在考虑结束之前等待的时间
       in-memory: true      # 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。
       non-blocking-redelivery: false  # 是否在回滚回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
       send-timeout: 0     # 等待消息发送响应的时间。设置为0等待永远。
       queue-name: active.first-queue
       topic-name: active.topic.name.first-model
       client-id: 1
    second:
       broker-url: tcp://139.199.81.196:61616
       user: admin
       password: admin
       close-timeout: 15   # 在考虑结束之前等待的时间
       in-memory: true      # 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。
       non-blocking-redelivery: false  # 是否在回滚回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
       send-timeout: 0     # 等待消息发送响应的时间。设置为0等待永远。
       queue-name: active.second-queue
       topic-name: active.topic.name.second-model
       client-id: 2
  #  packages:
  #    trust-all: true #不配置此项，会报错
pool:
  enabled: true
  max-connections: 10   #连接池最大连接数
  idle-timeout: 30000   #空闲的连接过期时间，默认为30秒

  # jms:
  #   pub-sub-domain: true  #默认情况下activemq提供的是queue模式，若要使用topic模式需要配置下面配置

# 是否信任所有包
#spring.activemq.packages.trust-all=
# 要信任的特定包的逗号分隔列表（当不信任所有包时）
#spring.activemq.packages.trusted=
# 当连接请求和池满时是否阻塞。设置false会抛“JMSException异常”。
#spring.activemq.pool.block-if-full=true
# 如果池仍然满，则在抛出异常前阻塞时间。
#spring.activemq.pool.block-if-full-timeout=-1ms
# 是否在启动时创建连接。可以在启动时用于加热池。
#spring.activemq.pool.create-connection-on-startup=true
# 是否用Pooledconnectionfactory代替普通的ConnectionFactory。
#spring.activemq.pool.enabled=false
# 连接过期超时。
#spring.activemq.pool.expiry-timeout=0ms
# 连接空闲超时
#spring.activemq.pool.idle-timeout=30s
# 连接池最大连接数
#spring.activemq.pool.max-connections=1
# 每个连接的有效会话的最大数目。
#spring.activemq.pool.maximum-active-session-per-connection=500
# 当有"JMSException"时尝试重新连接
#spring.activemq.pool.reconnect-on-exception=true
# 在空闲连接清除线程之间运行的时间。当为负数时，没有空闲连接驱逐线程运行。
#spring.activemq.pool.time-between-expiration-check=-1ms
# 是否只使用一个MessageProducer


#docker run -d --hostname my-rabbit -p 5672:5672 -p 15672:15672 rabbitmq:3.8.7-management
#rabbitmqctl add_user admin admin
# docker run -d --name rabbitmq3.7.7 -p 5672:5672 -p 15672:15672 -e RABBITMQ_DEFAULT_VHOST=my_vhost  -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin


spring.cloud:
  stream:
    #消息中间件定义 default_rabbit
    defaultBinder: local_rabbit
    binders:
      local_rabbit:
        type: rabbit
        environment:
          spring:
            rabbitmq:
              host: 119.29.20.130
              port: 5672
              username: admin
              password: admin
              virtual-host: my_vhost
    #rabbit 配置定义
    rabbit:
      bindings:
        personalRegisterExpand_output: #账户接口-个人绑卡注册
          producer:
            exchangeType: direct
            queueNameGroupOnly: true
            routingKeyExpression: '''xxaibank.mq.routingkey.personalRegisterExpand'''
            bindingRoutingKey: xxaibank.mq.routingkey.personalRegisterExpand
        personalRegisterInput:
          consumer:
            acknowledgeMode: MANUAL
            bindingRoutingKey: xxaibank.mq.routingkey.personalRegisterExpand
            exchangeType: direct
            queueNameGroupOnly: true

    bindings:
      personalRegisterExpand_output: #账户接口-个人绑卡注册
        destination: xxaibank.mq.exchange.personalRegisterExpand
        binder: local_rabbit
        content-type:  application/json
        group: xxaibank.mq.queue.personalRegisterExpand
        producer:
          requiredGroups: xxaibank.mq.queue.personalRegisterExpand
      personalRegisterInput:
        destination: xxaibank.mq.exchange.personalRegisterExpand
        binder: local_rabbit
        content-type: application/json
        group: xxaibank.mq.queue.personalRegisterExpand
xxl:
 job:
  admin:
       #调度中心部署跟地址：如调度中心集群部署存在多个地址则用逗号分隔。
       #执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"。
    addresses: http://127.0.0.1:8080/xxl-job-admin
     #分别配置执行器的名称、ip地址、端口号
     #注意：如果配置多个执行器时，防止端口冲突
  executor:
    address:

    appname: xxl-job-executor-sample
    ip: 127.0.0.1
    port: 10012
    #执行器运行日志文件存储的磁盘位置，需要对该路径拥有读写权限
    logpath: /data/applogs/xxl-job/jobhandler
    #执行器Log文件定期清理功能，指定日志保存天数，日志文件过期自动删除。限制至少保持3天，否则功能不生效；
    #-1表示永不删除
    logretentiondays: -1
  accessToken: